version: '3.8'

services:

  #Api Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: campus-api-gateway
    env_file:
      - ../.env.shared
      - ./api-gateway/.env
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - auth-service
      - consul
    networks:
      - campus-network
    restart: unless-stopped

  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: campus-auth-service
    env_file:
      - ../.env.shared
      - ./auth-service/.env

    ports:
      - "${PORT}:${PORT}"
    depends_on:
      - sqlserver
      - consul
    networks:
      - campus-network
    volumes:
      - auth_logs:/var/log/auth-service
    restart: unless-stopped

  # MS SQL Server 2022 Database
  sqlserver:
    image: 'mcr.microsoft.com/mssql/server:2022-CU12-ubuntu-22.04'
    container_name: campus-sqlserver
    env_file:
      - .env.shared
    environment:
      - 'ACCEPT_EULA=Y'
      - 'MSSQL_PID=Express'
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
      - MSSQL_USER=${DB_USERNAME}
      - MSSQL_PASSWORD=${DB_PASSWORD}
      - MSSQL_DATABASE=${DB_NAME}
      - MSSQL_AGENT_ENABLED=${DB_MS_AGENT_ENABLED}
    ports:
      - ${DB_PORT}:${DB_PORT}

    #Mounts inside the container
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - campus-network
    restart: unless-stopped

  # Redis for caching (future use)
  redis:
    image: redis:7-alpine
    container_name: campus-redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - campus-network
    restart: unless-stopped
  #Consul for health check
  consul:
    image: consul:1.15
    container_name: consul
    ports:
      - ${CONSUL_PORT}:${CONSUL_PORT} # Web UI / HTTP API
    networks:
      - campus-network
    restart: unless-stopped

#Declares the volume names
volumes:
  sqlserver_data:
  auth_logs:

networks:
  campus-network:
    driver: bridge